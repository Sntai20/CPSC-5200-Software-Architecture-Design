@page "/user/cascade-auth-state"
@using Microsoft.AspNetCore.Components.Authorization

<h1>Authentication State and Authorization Check</h1>

<p>@authMessage</p>

@code {
    private string authMessage = "The user is NOT authenticated.";

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                string name = user.FindFirst("name")?.Value ?? string.Empty;
                if (user.IsInRole("Admin"))
                {
                    authMessage = $"{name} is authenticated and in the Admin role.";
                }
                else
                {
                    authMessage = $"{name} is authenticated, but not in the Admin role.";
                }
            }
        }
    }
}