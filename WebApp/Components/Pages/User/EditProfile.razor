@page "/user/editprofile"
@attribute [Authorize]
@attribute [StreamRendering]
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserProfileService ProfileService

<PageTitle>User Profile | SeattleU eShop</PageTitle>
<SectionContent SectionName="page-header-title">Edit Profile</SectionContent>
<OrdersRefreshOnStatusChange />

<div class="userProfile">
    @if (userProfile is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="userProfile-item">
            <label for="name">Name: @userProfile.Name</label>
        </div>
        <div class="userProfile-item">
            <label for="lastName">Last Name: @userProfile.LastName</label>
        </div>
        <div class="userProfile-item">
            <label for="email">Email: @userProfile.Email</label>
            <input type="email" id="email" @bind="@userProfile.Email" />
        </div>
        <button type="submit" @onclick="UpdateProfile">Update Profile</button>
        @if (isUpdating)
        {
            <p>Updating...</p>
        }
        else if (!string.IsNullOrWhiteSpace(updateMessage))
        {
            <p>@updateMessage</p>
        }
    }
</div>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }
    private UserProfileService.UserProfile? userProfile;
    private bool isUpdating;
    private string updateMessage = "";

    protected override async Task OnInitializedAsync()
    {
        userProfile = await ProfileService.GetProfileData(HttpContext!);
    }

    public async Task UpdateProfile()
    {
        if (userProfile is not null)
        {
            isUpdating = true;
            try
            {
                userProfile = await ProfileService.UpdateProfileData(HttpContext!, userProfile);
            }
            catch (Exception)
            {
                updateMessage = "An error occurred while updating the profile.";
            }
            finally
            {
                isUpdating = false;
            }
        }
    }
}